/*Package swagger AnyPay
 *
 * AnyPay
 *
 * This the AnyPay service targeted towards, parents with children doing payments and russian oligarks
 *
 * API version: 1.0.0
 * Contact: pr.von.rosen@swedbank.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

/*Route is managing the routes for the API calls to the correct go-functions*/
type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

/*Routes is a collection of Route*/
type Routes []Route

/*NewRouter - create a new Route and populate it*/
func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

/*Index is the function returning the default response to the request /anypay/v1/
 */
func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "\nThe is the AnyPayAPI complying to the OpenAPI3.0 specification\n\n")
	fmt.Fprintf(w, "The endpoints for the JSON file is:\n")
	fmt.Fprintf(w, "/anypay/v1/openapi/JSON\n\n")
	fmt.Fprintf(w, "The endpoints for the Yaml file is:\n")
	fmt.Fprintf(w, "/anypay/v1/openapi/Yaml\n")

}

var routes = Routes{
	Route{
		"ambassador_openapi",
		"GET",
		"/.ambassador-internal/openapi-docs",
		OpenapiJSON,
	},

	Route{
		"Openapi",
		"GET",
		"/openapi/yaml",
		OpenapiYaml,
	},

	Route{
		"Openapi",
		"GET",
		"/openapi/json",
		OpenapiJSON,
	},

	Route{
		"Index",
		"GET",
		"/anypay/v1/",
		Index,
	},

	Route{
		"AddAccount",
		strings.ToUpper("Post"),
		"/anypay/v1/accounts",
		AddAccount,
	},

	Route{
		"GetAccount",
		strings.ToUpper("Get"),
		"/anypay/v1/accounts/{accountID}",
		GetAccount,
	},

	Route{
		"GetAccounts",
		strings.ToUpper("Get"),
		"/anypay/v1/accounts",
		GetAccounts,
	},

	Route{
		"UpdateAccount",
		strings.ToUpper("Put"),
		"/anypay/v1/accounts",
		UpdateAccount,
	},

	Route{
		"AddFxorder",
		strings.ToUpper("Post"),
		"/anypay/v1/fxorder",
		AddFxorder,
	},

	Route{
		"DeleteFxorder",
		strings.ToUpper("Delete"),
		"/anypay/v1/fxorder/{fxorderID}",
		DeleteFxorder,
	},

	Route{
		"GetFxorders",
		strings.ToUpper("Get"),
		"/anypay/v1/fxorder",
		GetFxorders,
	},

	Route{
		"GetFxorder",
		strings.ToUpper("Get"),
		"/anypay/v1/fxorder/{fxorderID}",
		GetFxorder,
	},

	Route{
		"UpdateFxorder",
		strings.ToUpper("Put"),
		"/anypay/v1/fxorder",
		UpdateFxorder,
	},

	Route{
		"AddPayment",
		strings.ToUpper("Post"),
		"/anypay/v1/payments",
		AddPayment,
	},

	Route{
		"DeletePayment",
		strings.ToUpper("Delete"),
		"/anypay/v1/payments/{paymentID}",
		DeletePayment,
	},

	Route{
		"GetPayment",
		strings.ToUpper("Get"),
		"/anypay/v1/payments/{paymentID}",
		GetPayment,
	},

	Route{
		"GetPayments",
		strings.ToUpper("Get"),
		"/anypay/v1/payments",
		GetPayments,
	},

	Route{
		"UpdatePayment",
		strings.ToUpper("Put"),
		"/anypay/v1/payments",
		UpdatePayment,
	},

	Route{
		"GetTransactions",
		strings.ToUpper("Get"),
		"/anypay/v1/transactions",
		GetTransactions,
	},

	Route{
		"GetTransaction",
		strings.ToUpper("Get"),
		"/anypay/v1/transactions/{transactionID}",
		GetTransaction,
	},

	Route{
		"AddUser",
		strings.ToUpper("Post"),
		"/anypay/v1/user",
		AddUser,
	},

	Route{
		"GetUser",
		strings.ToUpper("Get"),
		"/anypay/v1/users/{userID}",
		GetUser,
	},

	Route{
		"GetUsers",
		strings.ToUpper("Get"),
		"/anypay/v1/users",
		GetUsers,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/anypay/v1/user",
		UpdateUser,
	},
}
