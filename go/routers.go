/*
 * AnyPay
 *
 * This the AnyPay service targeted towards, parents with children doing payments and russian oligarks
 *
 * API version: 1.0.0
 * Contact: per.von.rosen@swedbank.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	myResponse := "\nThis is the AnyPayAPI complying to the OpenAPI3.0 specification\n\n"
	myResponse += "The endpoint for the JSON file is:\n"
	myResponse += "/anypay/v1/openapi/json\n\n"
	myResponse += "The endpoint for the Yaml file is:\n"
	myResponse += "/anypay/v1/openapi/yaml\n"

	c.String(http.StatusOK, myResponse)
}

var routes = Routes{

	{
		"ambassador_openapi",
		"GET",
		"/.ambassador-internal/openapi-docs",
		OpenAPIjson,
	},

	{
		"Index",
		http.MethodGet,
		"/anypay/v1/",
		Index,
	},

	{
		"AddAccount",
		http.MethodPost,
		"/anypay/v1/accounts",
		AddAccount,
	},

	{
		"GetAccount",
		http.MethodGet,
		"/anypay/v1/accounts/:accountID",
		GetAccount,
	},

	{
		"GetAccounts",
		http.MethodGet,
		"/anypay/v1/accounts",
		GetAccounts,
	},

	{
		"UpdateAccount",
		http.MethodPut,
		"/anypay/v1/accounts",
		UpdateAccount,
	},

	{
		"AddFxorder",
		http.MethodPost,
		"/anypay/v1/fxorders",
		AddFxorder,
	},

	{
		"DeleteFxorder",
		http.MethodDelete,
		"/anypay/v1/fxorders/:fxorderID",
		DeleteFxorder,
	},

	{
		"GetFxorders",
		http.MethodGet,
		"/anypay/v1/fxorders",
		GetFxorder,
	},

	{
		"GetFxorder",
		http.MethodGet,
		"/anypay/v1/fxorders/:fxorderID",
		GetFxorder,
	},

	{
		"UpdateFxorder",
		http.MethodPut,
		"/anypay/v1/fxorders",
		UpdateFxorder,
	},

	{
		"OpenAPIjson",
		http.MethodGet,
		"/anypay/v1/openapi/json",
		OpenAPIjson,
	},

	{
		"OpenAPIyaml",
		http.MethodGet,
		"/anypay/v1/openapi/yaml",
		OpenAPIyaml,
	},

	{
		"AddPayment",
		http.MethodPost,
		"/anypay/v1/payments",
		AddPayment,
	},

	{
		"DeletePayment",
		http.MethodDelete,
		"/anypay/v1/payments/:paymentID",
		DeletePayment,
	},

	{
		"GetPayment",
		http.MethodGet,
		"/anypay/v1/payments/:paymentID",
		GetPayment,
	},

	{
		"GetPayments",
		http.MethodGet,
		"/anypay/v1/payments",
		GetPayments,
	},

	{
		"UpdatePayment",
		http.MethodPut,
		"/anypay/v1/payments",
		UpdatePayment,
	},

	{
		"GetTransaction",
		http.MethodGet,
		"/anypay/v1/transactions/:transactionID",
		GetTransaction,
	},

	{
		"GetTransactions",
		http.MethodGet,
		"/anypay/v1/transactions",
		GetTransactions,
	},

	{
		"AddUser",
		http.MethodPost,
		"/anypay/v1/users",
		AddUser,
	},

	{
		"GetUser",
		http.MethodGet,
		"/anypay/v1/users/:userID",
		GetUser,
	},

	{
		"GetUses",
		http.MethodGet,
		"/anypay/v1/users",
		GetUses,
	},

	{
		"UpdateUser",
		http.MethodPut,
		"/anypay/v1/users",
		UpdateUser,
	},
}
